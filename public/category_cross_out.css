/* Container for the card. It also requires the backdrop_for_variable_heights div to
   account for potential varying heights amongst the cards. (Otherwise, they'll all
   resize to be the same height.*/

.cco_card_container{
    display: flex;
    flex-direction: row;
}


.cco_backdrop_for_variable_heights{
    display: flex;
    flex-grow: 1;
}

/* Sets up an individual card.*/
.cco_single_card {
    display: flex;
    flex-direction: column;
    justify-content: center;
    flex-grow: 1;
    border-radius: 4px;
    background: #fff;
    box-shadow: 0 6px 10px rgba(0, 0, 0, .08), 0 0 6px rgba(0, 0, 0, .05);
    transition: .3s transform cubic-bezier(.155, 1.105, .295, 1.12), .3s box-shadow, .3s -webkit-transform cubic-bezier(.155, 1.105, .295, 1.12);
    cursor: pointer;
    margin: 20px;
    text-align: center;
}

/* Resizes the card upon hover.*/
.cco_single_card:hover{
    transform: scale(1.05);
    box-shadow: 0 10px 20px rgba(0,0,0,.12), 0 4px 8px rgba(0,0,0,.06);
}

/* Settings for the word on the card.*/
.cco_single_card h3{
    font-weight: 600;
}

/* Creates space between the cards.*/
.cco_card_spacer{
    width: 10%;
}

img.cco_hint_image{

}

.cco_tracker_container{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.cco_score_tracker{
    width: 50%;
    text-align: center;
    margin: 20px;
    box-shadow: 0 6px 10px rgba(0, 0, 0, .08), 0 0 6px rgba(0, 0, 0, .05);
    border-radius: 4px;

    font-family: "Nunito", sans-serif;
    font-size: 16px;
    font-weight: 600;
}

.cco_score_tracker span {
    margin: 20px;

}

/* material_button is adapted from the code by (c) Bence Szab√≥ which
uses the MIT license and can be found here: https://github.com/finnhvman/matter */

.cco_button{
    display: flex;
    justify-content: flex-end;
    margin-top: 10px;

}
.material_button {
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    border: none;
    border-radius: 7px;
    padding: 0 20px;
    min-width: 64px;
    height: 70px;
    vertical-align: middle;
    text-align: center;
    text-overflow: ellipsis;
    text-transform: uppercase;
    color: #FFFFFF;
    background-color: #1A237E;
    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
    font-family: "Nunito", sans-serif;
    font-size: 20px;
    font-weight: 600;
    overflow: hidden;
    outline: none;
    cursor: pointer;
    transition: box-shadow 0.2s;
    margin: 20px;
}

.material_button::-moz-focus-inner {
    border: none;
}

/* Overlay */
.material_button::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: #FFFFFF;
    opacity: 0;
    transition: opacity 0.2s;
}

.material_button::after {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    border-radius: 50%;
    padding: 50%;
    width: 32px; /* Safari */
    height: 32px; /* Safari */
    background-color: #FFFFFF;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
    transition: opacity 1s, transform 0.5s;
}

.material_button:hover,
.material_button:focus {
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
}

.material_button:hover::before {
    opacity: 0.08;
}

.material_button:focus::before {
    opacity: 0.24;
}

.material_button:hover:focus::before {
    opacity: 0.3;
}


.material_button:active {
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.material_button:active::after {
    opacity: 0.32;
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0s;
}

.material_button:disabled {
    color: #9e9e9e;
    background-color: #e0e0e0;
    box-shadow: none;
    cursor: initial;
}

.material_button:disabled::before {
    opacity: 0;
}

.material_button:disabled::after {
    opacity: 0;
}